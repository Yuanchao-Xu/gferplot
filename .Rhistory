radius <- getRadius(data$GDP)
getRadius <- function(y, small = 1.5, medium = 3, large = 5) {
r <- sapply(y, function(x) {
if (x <= 40000 & x >= 15000) {
x <- medium
} else if (x < 15000) {
x <- small
} else {
x <- large
}
})
return (r)
}
radius <- getRadius(data$GDP)
radius
layer_pie <- geom_scatterpie(data = data, aes(x, y), r = radius,
cols = colnames(data)[3:5], color = NA)
layer_pie <- geom_scatterpie(data = data, aes(x, y, r = radius),
cols = colnames(data)[3:5], color = NA)
layer_plot <- layer_basic + layer_points + layer_pie + coord_equal()
print(layer_plot)
radius
data
data$radius <- getRadius(data$GDP)
layer_pie <- geom_scatterpie(data = data, aes(x, y, r = radius),
cols = colnames(data)[3:5], color = NA)
layer_plot <- layer_basic + layer_points + layer_pie + coord_equal()
print(layer_plot)
layer_basic <- ggplot()
layer_points <- geom_point(data = data, aes(x, y))
layer_pie <- geom_scatterpie(data = data, aes(x, y, r = radius),
cols = colnames(data)[3:5], color = NA)
layer_plot <- layer_basic + layer_points + layer_pie + coord_equal()
print(layer_plot)
layer_basic+ layer_pie + coord_equal()
layer_basic+ layer_pie + coord_equal()
layer_basic+ layer_pie + coord_equal()
style <- theme(axis.line = element_line(size = 1, colour = "black"))
print(layer_plot + style)
a <- theme(axis.line = element_line(size = 1, colour = "black"),
panel.background = element_rect(fill = "white", colour = "grey50"))
ggstyle <- function() {
a <- theme(axis.line = element_line(size = 1, colour = "black"),
panel.background = element_rect(fill = "white", colour = "grey50"))
}
style <- ggstyle()
print(layer_plot + style)
a <- theme(axis.line = element_line(size = 1, colour = "black"),
panel.background = element_rect(fill = "white"))
ggstyle <- function() {
a <- theme(axis.line = element_line(size = 1, colour = "black"),
panel.background = element_rect(fill = "white"))
}
style <- ggstyle()
print(layer_plot + style)
ggstyle <- function() {
a <- theme(axis.line = element_line(size = 1, colour = "black"),
panel.background = element_rect(fill = "white"),
panel.grid.major = element_line(colour = "grey50"))
}
style <- ggstyle()
print(layer_plot + style)
ggstyle <- function() {
a <- theme(axis.line = element_line(size = 1, colour = "black"))
#panel.background = element_rect(fill = "white"),
#panel.grid.major = element_line(colour = "grey50"))
}
style <- ggstyle()
print(layer_plot + style)
print(layer_plot)
style <- theme_classic()
print(layer_plot + style)
print(layer_plot + style)
print(layer_plot + style)
install.packages("ggrepel")
library(ggrepel)
print(layer_plot + style)
layer_plot <- layer_basic + layer_pie + layer_label + coord_equal()
print(layer_plot + style)
layer_label <- geom_text_repel(data = data, aes(x, y, label = Province))
print(layer_plot + style)
layer_basic + layer_points
layer_basic + layer_points + layer_label
layer_plot <- layer_basic + layer_pie + layer_label + coord_equal()
layer_basic + layer_pie + layer_label + coord_equal()
layer_label <- geom_text_repel(data = data, aes(x, y, label = Province),
point.padding = unit(0.35, "lines"))
layer_plot <- layer_basic + layer_pie + layer_label + coord_equal()
print(layer_plot + style)
layer_label <- geom_text_repel(data = data, aes(x, y, label = Province),
segment.size = 0.5)
layer_plot <- layer_basic + layer_pie + layer_label + coord_equal()
print(layer_plot + style)
layer_points <- geom_point(data = data, aes(x, y, r = radius))
layer_points <- geom_point(data = data, aes(x, y, size = radius))
layer_basic <- ggplot()
layer_basic + layer_points
layer_label <- geom_text_repel(data = data, aes(x, y, label = Province),
segment.size = 0.5)
layer_basic + layer_points + layer_label
layer_label <- geom_text_repel(data = data, aes(x, y, label = Province),
point.padding = unit(0.5, "lines"),
segment.size = 0.5)
layer_basic + layer_points + layer_label
layer_label <- geom_text_repel(data = data, aes(x, y, label = Province),
point.padding = unit(0.5, "lines"),
)
layer_basic + layer_points + layer_label
layer_label <- geom_text_repel(data = data, aes(x, y, label = Province),
point.padding = unit(1, "lines"),
)
layer_basic + layer_points + layer_label
layer_label <- geom_text_repel(data = data, aes(x, y, label = Province),
point.padding = unit(radius, "lines")
)
layer_basic + layer_points + layer_label
?unit
unit(1, "lines")
unit(2, "lines")
unit([1:3], "lines")
unit(1:3, "lines")
layer_label <- geom_text_repel(data = data, aes(x, y, label = Province),
point.padding = unit(3, "lines")
)
layer_basic + layer_points + layer_label
labelLine <- 1
layer_label <- geom_text_repel(data = data, aes(x, y, label = Province),
point.padding = unit(labelLine, "lines")
)
layer_basic + layer_points + layer_label
layer_basic <- ggplot()
layer_points <- geom_point(data = data, aes(x, y, size = radius))
data$radius <- getRadius(data$GDP)
layer_pie <- geom_scatterpie(data = data, aes(x, y, r = radius),
cols = colnames(data)[3:5], color = NA)
layer_label <- geom_text_repel(data = data, aes(x, y, label = Province),
point.padding = unit(labelLine, "lines")
)
layer_plot <- layer_basic + layer_points + layer_pie + layer_label + coord_equal()
style <- ggstyle()
print(layer_plot + style)
labelLine <- 2
layer_label <- geom_text_repel(data = data, aes(x, y, label = Province),
point.padding = unit(labelLine, "lines")
)
print(layer_plot + style)
layer_plot <- layer_basic + layer_points + layer_pie + layer_label + coord_equal()
style <- ggstyle()
print(layer_plot + style)
labelLine
1.5
data
labelLine <- 5/3
layer_label <- geom_text_repel(data = data, aes(x, y, label = Province),
point.padding = unit(labelLine, "lines")
)
layer_plot <- layer_basic + layer_points + layer_pie + layer_label + coord_equal()
print(layer_plot + style)
layer_label <- geom_text_repel(data = data, aes(x, y, label = Province),
point.padding = unit(labelLine, "lines")
)
layer_plot <- layer_basic + layer_points + layer_pie + layer_label + coord_equal()
style <- ggstyle()
print(layer_plot + style)
labelLine <- 1.2
layer_label <- geom_text_repel(data = data, aes(x, y, label = Province),
point.padding = unit(labelLine, "lines")
)
layer_plot <- layer_basic + layer_points + layer_pie + layer_label + coord_equal()
style <- ggstyle()
print(layer_plot + style)
labelLine <- max(data$radius)/3
layer_label <- geom_text_repel(data = data, aes(x, y, label = Province),
point.padding = unit(labelLine, "lines")
)
layer_plot <- layer_basic + layer_points + layer_pie + layer_label + coord_equal()
style <- ggstyle()
print(layer_plot + style)
ggstyle <- function() {
a <- themetheme(axis.line = element_line(size = 1, colour = "black"))
#panel.background = element_rect(fill = "white"),
#panel.grid.major = element_line(colour = "grey50"))
}
style <- ggstyle()
print(layer_plot + style)
ggstyle <- function() {
a <- theme_classic()
#themetheme(axis.line = element_line(size = 1, colour = "black"))
#panel.background = element_rect(fill = "white"),
#panel.grid.major = element_line(colour = "grey50"))
}
style <- ggstyle()
print(layer_plot + style)
ggstyle <- function() {
a <- theme_classic() +
themetheme(axis.line = element_line(size = 1, colour = "black"))
#panel.background = element_rect(fill = "white"),
#panel.grid.major = element_line(colour = "grey50"))
}
style <- ggstyle()
print(layer_plot + style)
ggstyle <- function() {
a <- theme_classic() +
theme(axis.line = element_line(size = 1, colour = "black"))
#panel.background = element_rect(fill = "white"),
#panel.grid.major = element_line(colour = "grey50"))
}
style <- ggstyle()
print(layer_plot + style)
layer_plot <- layer_basic + layer_pie + layer_label + layer_legend + coord_equal()
print(layer_plot + style)
layer_legend <- geom_scatterpie_legend(d$radius, x=-160, y=-55)
layer_legend <- geom_scatterpie_legend(data$radius, x=-160, y=-55)
layer_plot <- layer_basic + layer_pie + layer_label + layer_legend + coord_equal()
print(layer_plot + style)
layer_legend <- geom_scatterpie_legend(data$radius, x= 0, y=0)
layer_plot <- layer_basic + layer_pie + layer_label + layer_legend + coord_equal()
print(layer_plot + style)
print(layer_plot + style)
layer_lines <-
#layer_legend <- geom_scatterpie_legend(data$radius, x= 0, y=0)
layer_plot <- layer_basic + layer_pie + layer_label + coord_equal()
print(layer_plot + style)
devtools::document()
devtools::document()
devtools::check(cran = T)
devtools::document()
devtools::check(cran = T)
devtools::check(cran = T)
devtools::document()
devtools::check(cran = T)
devtools::document()
devtools::check(cran = T)
devtools::document()
devtools::check(cran = T)
devtools::check(cran = T)
data(GDPmix)
colnames(GDPmix)
devtools::document()
devtools::check(cran = T)
devtools::check(cran = T)
plotScatterPie(GDPmix)
devtools::document()
devtools::check(cran = T)
plotScatterPie(GDPmix)
plotScatterPie <- function(data, xmeanLine = TRUE, ymeanLine = TRUE, labelLine = NULL) {
with (data, {
layer_basic <- ggplot()
#  layer_points <- geom_point(data = data, aes(x, y, size = radius))
data$radius <- getRadius(data$GDP)
layer_pie <- geom_scatterpie(data = data, aes(x, y, r = radius),
cols = colnames(data)[3:5], color = NA)
layer_line <- NULL
if (xmeanLine == TRUE) layer_line <- layer_line + geom_vline(xintercept = mean(data$x), color = 'red', size = 2)
if (ymeanLine == TRUE) layer_line <- layer_line + geom_hline(yintercept = mean(data$y), color = 'red', size = 2)
if (is.null(labelLine)) labelLine <- max(data$radius)/3
layer_label <- geom_text_repel(data = data, aes(x, y, label = Province),
point.padding = unit(labelLine, "lines"))
#layer_legend <- geom_scatterpie_legend(data$radius, x= 0, y=0)
layer_plot <- layer_basic + layer_pie + layer_line + layer_label + coord_equal()
style <- ggstyle()
print(layer_plot + style)
})
}
plotScatterPie(GDPmix)
library(ggplot)
library(ggplot2)
plotScatterPie(GDPmix)
library(scatterpie)
plotScatterPie(GDPmix)
layer_line + geom_vline(xintercept = mean(data$x), color = 'red', size = 2)
debug(plotScatterPie)
plotScatterPie(GDPmix)
plotScatterPie(GDPmix)
plotScatterPie <- function(data, xmeanLine = TRUE, ymeanLine = TRUE, labelLine = NULL) {
with (data, {
layer_basic <- ggplot()
#  layer_points <- geom_point(data = data, aes(x, y, size = radius))
data$radius <- getRadius(data$GDP)
layer_pie <- geom_scatterpie(data = data, aes(x, y, r = radius),
cols = colnames(data)[3:5], color = NA)
if (is.null(labelLine)) labelLine <- max(data$radius)/3
layer_label <- geom_text_repel(data = data, aes(x, y, label = Province),
point.padding = unit(labelLine, "lines"))
#layer_legend <- geom_scatterpie_legend(data$radius, x= 0, y=0)
layer_plot <- layer_basic + layer_pie + layer_label + coord_equal()
if (xmeanLine == TRUE) layer_plot <- layer_plot + geom_vline(xintercept = mean(data$x), color = 'red', size = 2)
if (ymeanLine == TRUE) layer_plot <- layer_plot + geom_hline(yintercept = mean(data$y), color = 'red', size = 2)
style <- ggstyle()
print(layer_plot + style)
})
}
plotScatterPie(GDPmix)
library(ggrepel)
plotScatterPie(GDPmix)
#'
plotScatterPie <- function(data, xmeanLine = TRUE, ymeanLine = TRUE, labelLine = NULL) {
with (data, {
layer_basic <- ggplot()
#  layer_points <- geom_point(data = data, aes(x, y, size = radius))
data$radius <- getRadius(data$GDP)
layer_pie <- geom_scatterpie(data = data, aes(x, y, r = radius),
cols = colnames(data)[3:5], color = NA)
if (is.null(labelLine)) labelLine <- max(data$radius)/3
layer_label <- geom_text_repel(data = data, aes(x, y, label = Province),
point.padding = unit(labelLine, "lines"))
#layer_legend <- geom_scatterpie_legend(data$radius, x= 0, y=0)
layer_plot <- layer_basic + layer_pie + layer_label + coord_equal()
if (xmeanLine == TRUE) layer_plot <- layer_plot + geom_vline(xintercept = mean(data$x), color = 'red', size = 1.5, lintype = g)
if (ymeanLine == TRUE) layer_plot <- layer_plot + geom_hline(yintercept = mean(data$y), color = 'red', size = 1.5, linetype = g)
style <- ggstyle()
print(layer_plot + style)
})
}
plotScatterPie(GDPmix)
plotScatterPie <- function(data, xmeanLine = TRUE, ymeanLine = TRUE, labelLine = NULL) {
with (data, {
layer_basic <- ggplot()
#  layer_points <- geom_point(data = data, aes(x, y, size = radius))
data$radius <- getRadius(data$GDP)
layer_pie <- geom_scatterpie(data = data, aes(x, y, r = radius),
cols = colnames(data)[3:5], color = NA)
if (is.null(labelLine)) labelLine <- max(data$radius)/3
layer_label <- geom_text_repel(data = data, aes(x, y, label = Province),
point.padding = unit(labelLine, "lines"))
#layer_legend <- geom_scatterpie_legend(data$radius, x= 0, y=0)
layer_plot <- layer_basic + layer_pie + layer_label + coord_equal()
if (xmeanLine == TRUE) layer_plot <- layer_plot + geom_vline(xintercept = mean(data$x), color = 'red', size = 1.5, linetype = 'g')
if (ymeanLine == TRUE) layer_plot <- layer_plot + geom_hline(yintercept = mean(data$y), color = 'red', size = 1.5, linetype = 'g')
style <- ggstyle()
print(layer_plot + style)
})
}
plotScatterPie(GDPmix)
plotScatterPie <- function(data, xmeanLine = TRUE, ymeanLine = TRUE, labelLine = NULL) {
with (data, {
layer_basic <- ggplot()
#  layer_points <- geom_point(data = data, aes(x, y, size = radius))
data$radius <- getRadius(data$GDP)
layer_pie <- geom_scatterpie(data = data, aes(x, y, r = radius),
cols = colnames(data)[3:5], color = NA)
if (is.null(labelLine)) labelLine <- max(data$radius)/3
layer_label <- geom_text_repel(data = data, aes(x, y, label = Province),
point.padding = unit(labelLine, "lines"))
#layer_legend <- geom_scatterpie_legend(data$radius, x= 0, y=0)
layer_plot <- layer_basic + layer_pie + layer_label + coord_equal()
if (xmeanLine == TRUE) layer_plot <- layer_plot + geom_vline(xintercept = mean(data$x), color = 'red', size = 1.5, linetype = 6)
if (ymeanLine == TRUE) layer_plot <- layer_plot + geom_hline(yintercept = mean(data$y), color = 'red', size = 1.5, linetype = 6)
style <- ggstyle()
print(layer_plot + style)
})
}
plotScatterPie(GDPmix)
plotScatterPie <- function(data, xmeanLine = TRUE, ymeanLine = TRUE, labelLine = NULL) {
with (data, {
layer_basic <- ggplot()
#  layer_points <- geom_point(data = data, aes(x, y, size = radius))
data$radius <- getRadius(data$GDP)
layer_pie <- geom_scatterpie(data = data, aes(x, y, r = radius),
cols = colnames(data)[3:5], color = NA)
if (is.null(labelLine)) labelLine <- max(data$radius)/3
layer_label <- geom_text_repel(data = data, aes(x, y, label = Province),
point.padding = unit(labelLine, "lines"))
#layer_legend <- geom_scatterpie_legend(data$radius, x= 0, y=0)
layer_plot <- layer_basic + layer_pie + layer_label + coord_equal()
if (xmeanLine == TRUE) layer_plot <- layer_plot + geom_vline(xintercept = mean(data$x), color = 'red', size = 1.5, linetype = 3)
if (ymeanLine == TRUE) layer_plot <- layer_plot + geom_hline(yintercept = mean(data$y), color = 'red', size = 1.5, linetype = 3)
style <- ggstyle()
print(layer_plot + style)
})
}
plotScatterPie(GDPmix)
plotScatterPie <- function(data, xmeanLine = TRUE, ymeanLine = TRUE, labelLine = NULL) {
with (data, {
layer_basic <- ggplot()
#  layer_points <- geom_point(data = data, aes(x, y, size = radius))
data$radius <- getRadius(data$GDP)
layer_pie <- geom_scatterpie(data = data, aes(x, y, r = radius),
cols = colnames(data)[3:5], color = NA)
if (is.null(labelLine)) labelLine <- max(data$radius)/3
layer_label <- geom_text_repel(data = data, aes(x, y, label = Province),
point.padding = unit(labelLine, "lines"))
#layer_legend <- geom_scatterpie_legend(data$radius, x= 0, y=0)
layer_plot <- layer_basic + layer_pie + layer_label + coord_equal()
if (xmeanLine == TRUE) layer_plot <- layer_plot + geom_vline(xintercept = mean(data$x), color = 'red', size = 1.5, linetype = 2)
if (ymeanLine == TRUE) layer_plot <- layer_plot + geom_hline(yintercept = mean(data$y), color = 'red', size = 1.5, linetype = 2)
style <- ggstyle()
print(layer_plot + style)
})
}
plotScatterPie(GDPmix)
plotScatterPie <- function(data, xmeanLine = TRUE, ymeanLine = TRUE, labelLine = NULL) {
with (data, {
layer_basic <- ggplot()
#  layer_points <- geom_point(data = data, aes(x, y, size = radius))
data$radius <- getRadius(data$GDP)
col <- c(rgb(107/255, 128/255, 51/255), rgb(2/255, 3/255, 3/255), rgb(13/255, 119/255, 185/255))
layer_pie <- geom_scatterpie(data = data, aes(x, y, r = radius),
cols = colnames(data)[3:5], color = col)
if (is.null(labelLine)) labelLine <- max(data$radius)/3
layer_label <- geom_text_repel(data = data, aes(x, y, label = Province),
point.padding = unit(labelLine, "lines"))
#layer_legend <- geom_scatterpie_legend(data$radius, x= 0, y=0)
layer_plot <- layer_basic + layer_pie + layer_label + coord_equal()
if (xmeanLine == TRUE) layer_plot <- layer_plot + geom_vline(xintercept = mean(data$x), color = 'red', size = 1.5, linetype = 2)
if (ymeanLine == TRUE) layer_plot <- layer_plot + geom_hline(yintercept = mean(data$y), color = 'red', size = 1.5, linetype = 2)
style <- ggstyle()
print(layer_plot + style)
})
}
plotScatterPie(GDPmix)
data
data <- GDPmix
layer_basic <- ggplot()
data$radius <- getRadius(data$GDP)
col <- c(rgb(107/255, 128/255, 51/255), rgb(2/255, 3/255, 3/255), rgb(13/255, 119/255, 185/255))
col
layer_pie <- geom_scatterpie(data = data, aes(x, y, r = radius),
cols = colnames(data)[3:5], color = col)
col
layer_basic + layer_pie
colnames(data)[3:5]
colnames(data)[3:5]
col
length(col)
length(data)
layer_pie <- geom_scatterpie(aes(data$x, data$y, r = data$radius),
cols = colnames(data)[3:5], color = col)
layer_pie <- geom_scatterpie(aes(x, y, r = radius),
cols = colnames(data)[3:5], color = col)
layer_pie <- geom_scatterpie(data = data, aes(x, y, r = radius),
cols = colnames(data)[3:5], color = col)
data
modifyList(data)
?modifyList
foo <- list(a = 1, b = list(c = "a", d = FALSE))
bar <- modifyList(foo, list(e = 2, b = list(d = TRUE)))
str(foo)
str(bar)
foo
bar
debug(geom_scatterpie)
layer_pie <- geom_scatterpie(data = data, aes(x, y, r = radius),
cols = colnames(data)[3:5], color = col)
mapping
mapping
str(mapping)
mapping
foo <- list(a = 1, b = list(c = "a", d = FALSE))
bar <- modifyList(foo, list(e = 2, b = list(d = TRUE)))
str(foo)
str(bar)
!"r" %in% names(mapping)
mapping
df
?gather_
data
cols
df
geom_scatterpie_withcolor <- function(mapping=NULL, data, cols, ...) {
if (is.null(mapping))
mapping <- aes_(x=~x, y=~y)
mapping <- modifyList(mapping, aes_(r0=0, fill=~type,
amount=~value))
if (!'r' %in% names(mapping)) {
xvar <- as.character(mapping)["x"]
size <- diff(range(data[, xvar]))/50
mapping <- modifyList(mapping, aes_(r=size))
}
names(mapping)[match(c("x", "y"), names(mapping))] <- c("x0", "y0")
df <- gather_(data, "type", "value", cols)
## df$type <- factor(df$type, levels=cols)
geom_arc_bar(mapping, data=df, stat='pie', inherit.aes=FALSE, ...)
}
layer_pie <- geom_scatterpie_withcolor(data = data, aes(x, y, r = radius),
cols = colnames(data)[3:5], color = col)
?gether_
library(tidyr)
layer_pie <- geom_scatterpie_withcolor(data = data, aes(x, y, r = radius),
cols = colnames(data)[3:5], color = col)
library(ggforce)
layer_pie <- geom_scatterpie_withcolor(data = data, aes(x, y, r = radius),
cols = colnames(data)[3:5], color = col)
layer_basic + layer_pie
layer_pie <- geom_scatterpie_withcolor(data = data, aes(x, y, r = radius),
cols = colnames(data)[3:5], color = NA)
layer_basic + layer_pie
geom_scatterpie_withcolor <- function(mapping=NULL, data, cols, ...) {
if (is.null(mapping))
mapping <- aes_(x=~x, y=~y)
mapping <- modifyList(mapping, aes_(r0=0, fill=~type,
amount=~value))
if (!'r' %in% names(mapping)) {
xvar <- as.character(mapping)["x"]
size <- diff(range(data[, xvar]))/50
mapping <- modifyList(mapping, aes_(r=size))
}
names(mapping)[match(c("x", "y"), names(mapping))] <- c("x0", "y0")
df <- gather_(data, "type", "value", cols)
## df$type <- factor(df$type, levels=cols)
geom_arc_bar(mapping, data=df, stat='pie', inherit.aes=FALSE, ...)
}
debug(geom_scatterpie_withcolor)
layer_pie <- geom_scatterpie_withcolor(data = data, aes(x, y, r = radius),
cols = colnames(data)[3:5], color = NA)
library(ggplot2)
library(ggforce)
library(tidyr)
layer_pie <- geom_scatterpie_withcolor(data = data, aes(x, y, r = radius),
cols = colnames(data)[3:5], color = NA)
data
df
